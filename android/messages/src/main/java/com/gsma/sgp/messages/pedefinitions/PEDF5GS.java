/**
 * This class file was automatically generated by jASN1 v1.11.3 (http://www.beanit.com)
 */

package com.gsma.sgp.messages.pedefinitions;

import java.io.IOException;
import java.io.EOFException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
import java.io.Serializable;
import com.beanit.jasn1.ber.*;
import com.beanit.jasn1.ber.types.*;
import com.beanit.jasn1.ber.types.string.*;


public class PEDF5GS implements BerType, Serializable {

	private static final long serialVersionUID = 1L;

	public static final BerTag tag = new BerTag(BerTag.UNIVERSAL_CLASS, BerTag.CONSTRUCTED, 16);

	public byte[] code = null;
	private PEHeader df5gsHeader = null;
	private BerObjectIdentifier templateID = null;
	private File dfDf5gs = null;
	private File ef5gs3gpploci = null;
	private File ef5gsn3gpploci = null;
	private File ef5gs3gppnsc = null;
	private File ef5gsn3gppnsc = null;
	private File ef5gauthkeys = null;
	private File efUacAic = null;
	private File efSuciCalcInfo = null;
	private File efOpl5g = null;
	private File efSupinai = null;
	private File efRoutingIndicator = null;
	private File efUrsp = null;
	private File efTn3gppsnn = null;
	
	public PEDF5GS() {
	}

	public PEDF5GS(byte[] code) {
		this.code = code;
	}

	public void setDf5gsHeader(PEHeader df5gsHeader) {
		this.df5gsHeader = df5gsHeader;
	}

	public PEHeader getDf5gsHeader() {
		return df5gsHeader;
	}

	public void setTemplateID(BerObjectIdentifier templateID) {
		this.templateID = templateID;
	}

	public BerObjectIdentifier getTemplateID() {
		return templateID;
	}

	public void setDfDf5gs(File dfDf5gs) {
		this.dfDf5gs = dfDf5gs;
	}

	public File getDfDf5gs() {
		return dfDf5gs;
	}

	public void setEf5gs3gpploci(File ef5gs3gpploci) {
		this.ef5gs3gpploci = ef5gs3gpploci;
	}

	public File getEf5gs3gpploci() {
		return ef5gs3gpploci;
	}

	public void setEf5gsn3gpploci(File ef5gsn3gpploci) {
		this.ef5gsn3gpploci = ef5gsn3gpploci;
	}

	public File getEf5gsn3gpploci() {
		return ef5gsn3gpploci;
	}

	public void setEf5gs3gppnsc(File ef5gs3gppnsc) {
		this.ef5gs3gppnsc = ef5gs3gppnsc;
	}

	public File getEf5gs3gppnsc() {
		return ef5gs3gppnsc;
	}

	public void setEf5gsn3gppnsc(File ef5gsn3gppnsc) {
		this.ef5gsn3gppnsc = ef5gsn3gppnsc;
	}

	public File getEf5gsn3gppnsc() {
		return ef5gsn3gppnsc;
	}

	public void setEf5gauthkeys(File ef5gauthkeys) {
		this.ef5gauthkeys = ef5gauthkeys;
	}

	public File getEf5gauthkeys() {
		return ef5gauthkeys;
	}

	public void setEfUacAic(File efUacAic) {
		this.efUacAic = efUacAic;
	}

	public File getEfUacAic() {
		return efUacAic;
	}

	public void setEfSuciCalcInfo(File efSuciCalcInfo) {
		this.efSuciCalcInfo = efSuciCalcInfo;
	}

	public File getEfSuciCalcInfo() {
		return efSuciCalcInfo;
	}

	public void setEfOpl5g(File efOpl5g) {
		this.efOpl5g = efOpl5g;
	}

	public File getEfOpl5g() {
		return efOpl5g;
	}

	public void setEfSupinai(File efSupinai) {
		this.efSupinai = efSupinai;
	}

	public File getEfSupinai() {
		return efSupinai;
	}

	public void setEfRoutingIndicator(File efRoutingIndicator) {
		this.efRoutingIndicator = efRoutingIndicator;
	}

	public File getEfRoutingIndicator() {
		return efRoutingIndicator;
	}

	public void setEfUrsp(File efUrsp) {
		this.efUrsp = efUrsp;
	}

	public File getEfUrsp() {
		return efUrsp;
	}

	public void setEfTn3gppsnn(File efTn3gppsnn) {
		this.efTn3gppsnn = efTn3gppsnn;
	}

	public File getEfTn3gppsnn() {
		return efTn3gppsnn;
	}

	public int encode(OutputStream reverseOS) throws IOException {
		return encode(reverseOS, true);
	}

	public int encode(OutputStream reverseOS, boolean withTag) throws IOException {

		if (code != null) {
			for (int i = code.length - 1; i >= 0; i--) {
				reverseOS.write(code[i]);
			}
			if (withTag) {
				return tag.encode(reverseOS) + code.length;
			}
			return code.length;
		}

		int codeLength = 0;
		if (efTn3gppsnn != null) {
			codeLength += efTn3gppsnn.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 14
			reverseOS.write(0xAE);
			codeLength += 1;
		}
		
		if (efUrsp != null) {
			codeLength += efUrsp.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 13
			reverseOS.write(0xAD);
			codeLength += 1;
		}
		
		if (efRoutingIndicator != null) {
			codeLength += efRoutingIndicator.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 12
			reverseOS.write(0xAC);
			codeLength += 1;
		}
		
		if (efSupinai != null) {
			codeLength += efSupinai.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 11
			reverseOS.write(0xAB);
			codeLength += 1;
		}
		
		if (efOpl5g != null) {
			codeLength += efOpl5g.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 10
			reverseOS.write(0xAA);
			codeLength += 1;
		}
		
		if (efSuciCalcInfo != null) {
			codeLength += efSuciCalcInfo.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 9
			reverseOS.write(0xA9);
			codeLength += 1;
		}
		
		if (efUacAic != null) {
			codeLength += efUacAic.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 8
			reverseOS.write(0xA8);
			codeLength += 1;
		}
		
		if (ef5gauthkeys != null) {
			codeLength += ef5gauthkeys.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 7
			reverseOS.write(0xA7);
			codeLength += 1;
		}
		
		if (ef5gsn3gppnsc != null) {
			codeLength += ef5gsn3gppnsc.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 6
			reverseOS.write(0xA6);
			codeLength += 1;
		}
		
		if (ef5gs3gppnsc != null) {
			codeLength += ef5gs3gppnsc.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 5
			reverseOS.write(0xA5);
			codeLength += 1;
		}
		
		if (ef5gsn3gpploci != null) {
			codeLength += ef5gsn3gpploci.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 4
			reverseOS.write(0xA4);
			codeLength += 1;
		}
		
		if (ef5gs3gpploci != null) {
			codeLength += ef5gs3gpploci.encode(reverseOS, false);
			// write tag: CONTEXT_CLASS, CONSTRUCTED, 3
			reverseOS.write(0xA3);
			codeLength += 1;
		}
		
		codeLength += dfDf5gs.encode(reverseOS, false);
		// write tag: CONTEXT_CLASS, CONSTRUCTED, 2
		reverseOS.write(0xA2);
		codeLength += 1;
		
		codeLength += templateID.encode(reverseOS, false);
		// write tag: CONTEXT_CLASS, PRIMITIVE, 1
		reverseOS.write(0x81);
		codeLength += 1;
		
		codeLength += df5gsHeader.encode(reverseOS, false);
		// write tag: CONTEXT_CLASS, CONSTRUCTED, 0
		reverseOS.write(0xA0);
		codeLength += 1;
		
		codeLength += BerLength.encodeLength(reverseOS, codeLength);

		if (withTag) {
			codeLength += tag.encode(reverseOS);
		}

		return codeLength;

	}

	public int decode(InputStream is) throws IOException {
		return decode(is, true);
	}

	public int decode(InputStream is, boolean withTag) throws IOException {
		int codeLength = 0;
		int subCodeLength = 0;
		BerTag berTag = new BerTag();

		if (withTag) {
			codeLength += tag.decodeAndCheck(is);
		}

		BerLength length = new BerLength();
		codeLength += length.decode(is);

		int totalLength = length.val;
		codeLength += totalLength;

		subCodeLength += berTag.decode(is);
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 0)) {
			df5gsHeader = new PEHeader();
			subCodeLength += df5gsHeader.decode(is, false);
			subCodeLength += berTag.decode(is);
		}
		else {
			throw new IOException("Tag does not match the mandatory sequence element tag.");
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.PRIMITIVE, 1)) {
			templateID = new BerObjectIdentifier();
			subCodeLength += templateID.decode(is, false);
			subCodeLength += berTag.decode(is);
		}
		else {
			throw new IOException("Tag does not match the mandatory sequence element tag.");
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 2)) {
			dfDf5gs = new File();
			subCodeLength += dfDf5gs.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		else {
			throw new IOException("Tag does not match the mandatory sequence element tag.");
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 3)) {
			ef5gs3gpploci = new File();
			subCodeLength += ef5gs3gpploci.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 4)) {
			ef5gsn3gpploci = new File();
			subCodeLength += ef5gsn3gpploci.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 5)) {
			ef5gs3gppnsc = new File();
			subCodeLength += ef5gs3gppnsc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 6)) {
			ef5gsn3gppnsc = new File();
			subCodeLength += ef5gsn3gppnsc.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 7)) {
			ef5gauthkeys = new File();
			subCodeLength += ef5gauthkeys.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 8)) {
			efUacAic = new File();
			subCodeLength += efUacAic.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 9)) {
			efSuciCalcInfo = new File();
			subCodeLength += efSuciCalcInfo.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 10)) {
			efOpl5g = new File();
			subCodeLength += efOpl5g.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 11)) {
			efSupinai = new File();
			subCodeLength += efSupinai.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 12)) {
			efRoutingIndicator = new File();
			subCodeLength += efRoutingIndicator.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 13)) {
			efUrsp = new File();
			subCodeLength += efUrsp.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
			subCodeLength += berTag.decode(is);
		}
		
		if (berTag.equals(BerTag.CONTEXT_CLASS, BerTag.CONSTRUCTED, 14)) {
			efTn3gppsnn = new File();
			subCodeLength += efTn3gppsnn.decode(is, false);
			if (subCodeLength == totalLength) {
				return codeLength;
			}
		}
		throw new IOException("Unexpected end of sequence, length tag: " + totalLength + ", actual sequence length: " + subCodeLength);

		
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		ReverseByteArrayOutputStream reverseOS = new ReverseByteArrayOutputStream(encodingSizeGuess);
		encode(reverseOS, false);
		code = reverseOS.getArray();
	}

	public String toString() {
		StringBuilder sb = new StringBuilder();
		appendAsString(sb, 0);
		return sb.toString();
	}

	public void appendAsString(StringBuilder sb, int indentLevel) {

		sb.append("{");
		sb.append("\n");
		for (int i = 0; i < indentLevel + 1; i++) {
			sb.append("\t");
		}
		if (df5gsHeader != null) {
			sb.append("df5gsHeader: ");
			df5gsHeader.appendAsString(sb, indentLevel + 1);
		}
		else {
			sb.append("df5gsHeader: <empty-required-field>");
		}
		
		sb.append(",\n");
		for (int i = 0; i < indentLevel + 1; i++) {
			sb.append("\t");
		}
		if (templateID != null) {
			sb.append("templateID: ").append(templateID);
		}
		else {
			sb.append("templateID: <empty-required-field>");
		}
		
		sb.append(",\n");
		for (int i = 0; i < indentLevel + 1; i++) {
			sb.append("\t");
		}
		if (dfDf5gs != null) {
			sb.append("dfDf5gs: ");
			dfDf5gs.appendAsString(sb, indentLevel + 1);
		}
		else {
			sb.append("dfDf5gs: <empty-required-field>");
		}
		
		if (ef5gs3gpploci != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ef5gs3gpploci: ");
			ef5gs3gpploci.appendAsString(sb, indentLevel + 1);
		}
		
		if (ef5gsn3gpploci != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ef5gsn3gpploci: ");
			ef5gsn3gpploci.appendAsString(sb, indentLevel + 1);
		}
		
		if (ef5gs3gppnsc != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ef5gs3gppnsc: ");
			ef5gs3gppnsc.appendAsString(sb, indentLevel + 1);
		}
		
		if (ef5gsn3gppnsc != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ef5gsn3gppnsc: ");
			ef5gsn3gppnsc.appendAsString(sb, indentLevel + 1);
		}
		
		if (ef5gauthkeys != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("ef5gauthkeys: ");
			ef5gauthkeys.appendAsString(sb, indentLevel + 1);
		}
		
		if (efUacAic != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efUacAic: ");
			efUacAic.appendAsString(sb, indentLevel + 1);
		}
		
		if (efSuciCalcInfo != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efSuciCalcInfo: ");
			efSuciCalcInfo.appendAsString(sb, indentLevel + 1);
		}
		
		if (efOpl5g != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efOpl5g: ");
			efOpl5g.appendAsString(sb, indentLevel + 1);
		}
		
		if (efSupinai != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efSupinai: ");
			efSupinai.appendAsString(sb, indentLevel + 1);
		}
		
		if (efRoutingIndicator != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efRoutingIndicator: ");
			efRoutingIndicator.appendAsString(sb, indentLevel + 1);
		}
		
		if (efUrsp != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efUrsp: ");
			efUrsp.appendAsString(sb, indentLevel + 1);
		}
		
		if (efTn3gppsnn != null) {
			sb.append(",\n");
			for (int i = 0; i < indentLevel + 1; i++) {
				sb.append("\t");
			}
			sb.append("efTn3gppsnn: ");
			efTn3gppsnn.appendAsString(sb, indentLevel + 1);
		}
		
		sb.append("\n");
		for (int i = 0; i < indentLevel; i++) {
			sb.append("\t");
		}
		sb.append("}");
	}

}

